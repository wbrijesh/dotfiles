{
	"files": [
		{
			"name": "README.md",
			"include": [],
			"exclude": [],
			"contents": "# create-svelte\n\nEverything you need to build a Svelte project, powered by [`create-svelte`](https://github.com/sveltejs/kit/tree/master/packages/create-svelte).\n\n## Creating a project\n\nIf you're seeing this, you've probably already done this step. Congrats!\n\n```bash\n# create a new project in the current directory\nnpm create svelte@latest\n\n# create a new project in my-app\nnpm create svelte@latest my-app\n```\n\n## Developing\n\nOnce you've created a project and installed dependencies with `npm install` (or `pnpm install` or `yarn`), start a development server:\n\n```bash\nnpm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --open\n```\n\n## Building\n\nTo create a production version of your app:\n\n```bash\nnpm run build\n```\n\nYou can preview the production build with `npm run preview`.\n\n> To deploy your app, you may need to install an [adapter](https://kit.svelte.dev/docs/adapters) for your target environment.\n"
		},
		{
			"name": "jsconfig.json",
			"include": [
				"checkjs"
			],
			"exclude": [],
			"contents": "{\n\t\"extends\": \"./.svelte-kit/tsconfig.json\",\n\t\"compilerOptions\": {\n\t\t\"allowJs\": true,\n\t\t\"checkJs\": true,\n\t\t\"esModuleInterop\": true,\n\t\t\"forceConsistentCasingInFileNames\": true,\n\t\t\"resolveJsonModule\": true,\n\t\t\"skipLibCheck\": true,\n\t\t\"sourceMap\": true,\n\t\t\"strict\": true\n\t}\n\t// Path aliases are handled by https://kit.svelte.dev/docs/configuration#alias and https://kit.svelte.dev/docs/configuration#files\n\t//\n\t// If you want to overwrite includes/excludes, make sure to copy over the relevant includes/excludes\n\t// from the referenced tsconfig.json - TypeScript does not merge them in\n}\n"
		},
		{
			"name": "package.json",
			"include": [
				"checkjs"
			],
			"exclude": [],
			"contents": "{\n\t\"scripts\": {\n\t\t\"check\": \"svelte-kit sync && svelte-check --tsconfig ./jsconfig.json\",\n\t\t\"check:watch\": \"svelte-kit sync && svelte-check --tsconfig ./jsconfig.json --watch\"\n\t},\n\t\"devDependencies\": {\n\t\t\"typescript\": \"^5.0.0\",\n\t\t\"svelte-check\": \"^3.0.1\"\n\t}\n}\n"
		},
		{
			"name": ".eslintignore",
			"include": [
				"eslint"
			],
			"exclude": [],
			"contents": ".DS_Store\nnode_modules\n/build\n/.svelte-kit\n/package\n.env\n.env.*\n!.env.example\n\n# Ignore files for PNPM, NPM and YARN\npnpm-lock.yaml\npackage-lock.json\nyarn.lock\n"
		},
		{
			"name": "package.json",
			"include": [
				"eslint"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"eslint\": \"^8.28.0\",\n\t\t\"eslint-plugin-svelte\": \"^2.26.0\"\n\t}\n}\n"
		},
		{
			"name": "package.json",
			"include": [
				"playwright"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"@playwright/test\": \"^1.28.1\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"playwright test\"\n\t}\n}\n"
		},
		{
			"name": ".prettierignore",
			"include": [
				"prettier"
			],
			"exclude": [],
			"contents": ".DS_Store\nnode_modules\n/build\n/.svelte-kit\n/package\n.env\n.env.*\n!.env.example\n\n# Ignore files for PNPM, NPM and YARN\npnpm-lock.yaml\npackage-lock.json\nyarn.lock\n"
		},
		{
			"name": ".prettierrc",
			"include": [
				"prettier"
			],
			"exclude": [],
			"contents": "{\n\t\"useTabs\": true,\n\t\"singleQuote\": true,\n\t\"trailingComma\": \"none\",\n\t\"printWidth\": 100,\n\t\"plugins\": [\"prettier-plugin-svelte\"],\n\t\"pluginSearchDirs\": [\".\"],\n\t\"overrides\": [{ \"files\": \"*.svelte\", \"options\": { \"parser\": \"svelte\" } }]\n}\n"
		},
		{
			"name": "package.json",
			"include": [
				"prettier"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"prettier\": \"^2.8.0\",\n\t\t\"prettier-plugin-svelte\": \"^2.8.1\"\n\t}\n}\n"
		},
		{
			"name": "README.md",
			"include": [
				"skeletonlib"
			],
			"exclude": [],
			"contents": "# create-svelte\n\nEverything you need to build a Svelte library, powered by [`create-svelte`](https://github.com/sveltejs/kit/tree/master/packages/create-svelte).\n\nRead more about creating a library [in the docs](https://kit.svelte.dev/docs/packaging).\n\n## Creating a project\n\nIf you're seeing this, you've probably already done this step. Congrats!\n\n```bash\n# create a new project in the current directory\nnpm create svelte@latest\n\n# create a new project in my-app\nnpm create svelte@latest my-app\n```\n\n## Developing\n\nOnce you've created a project and installed dependencies with `npm install` (or `pnpm install` or `yarn`), start a development server:\n\n```bash\nnpm run dev\n\n# or start the server and open the app in a new browser tab\nnpm run dev -- --open\n```\n\nEverything inside `src/lib` is part of your library, everything inside `src/routes` can be used as a showcase or preview app.\n\n## Building\n\nTo build your library:\n\n```bash\nnpm run package\n```\n\nTo create a production version of your showcase app:\n\n```bash\nnpm run build\n```\n\nYou can preview the production build with `npm run preview`.\n\n> To deploy your app, you may need to install an [adapter](https://kit.svelte.dev/docs/adapters) for your target environment.\n\n## Publishing\n\nGo into the `package.json` and give your package the desired name through the `\"name\"` option. Also consider adding a `\"license\"` field and point it to a `LICENSE` file which you can create from a template (one popular option is the [MIT license](https://opensource.org/license/mit/)).\n\nTo publish your library to [npm](https://www.npmjs.com):\n\n```bash\nnpm publish\n```\n"
		},
		{
			"name": "package.json",
			"include": [
				"typescript"
			],
			"exclude": [],
			"contents": "{\n\t\"scripts\": {\n\t\t\"check\": \"svelte-kit sync && svelte-check --tsconfig ./tsconfig.json\",\n\t\t\"check:watch\": \"svelte-kit sync && svelte-check --tsconfig ./tsconfig.json --watch\"\n\t},\n\t\"devDependencies\": {\n\t\t\"typescript\": \"^5.0.0\",\n\t\t\"tslib\": \"^2.4.1\",\n\t\t\"svelte-check\": \"^3.0.1\"\n\t}\n}\n"
		},
		{
			"name": "svelte.config.js",
			"include": [
				"typescript"
			],
			"exclude": [],
			"contents": "import adapter from '@sveltejs/adapter-auto';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\t// Consult https://kit.svelte.dev/docs/integrations#preprocessors\n\t// for more information about preprocessors\n\tpreprocess: vitePreprocess(),\n\n\tkit: {\n\t\t// adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.\n\t\t// If your environment is not supported or you settled on a specific environment, switch out the adapter.\n\t\t// See https://kit.svelte.dev/docs/adapters for more information about adapters.\n\t\tadapter: adapter()\n\t}\n};\n\nexport default config;\n"
		},
		{
			"name": "tsconfig.json",
			"include": [
				"typescript"
			],
			"exclude": [],
			"contents": "{\n\t\"extends\": \"./.svelte-kit/tsconfig.json\",\n\t\"compilerOptions\": {\n\t\t\"allowJs\": true,\n\t\t\"checkJs\": true,\n\t\t\"esModuleInterop\": true,\n\t\t\"forceConsistentCasingInFileNames\": true,\n\t\t\"resolveJsonModule\": true,\n\t\t\"skipLibCheck\": true,\n\t\t\"sourceMap\": true,\n\t\t\"strict\": true\n\t}\n\t// Path aliases are handled by https://kit.svelte.dev/docs/configuration#alias\n\t//\n\t// If you want to overwrite includes/excludes, make sure to copy over the relevant includes/excludes\n\t// from the referenced tsconfig.json - TypeScript does not merge them in\n}\n"
		},
		{
			"name": "package.json",
			"include": [
				"vitest"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"vitest\": \"^0.25.3\"\n\t},\n\t\"scripts\": {\n\t\t\"test:unit\": \"vitest\"\n\t}\n}\n"
		},
		{
			"name": "svelte.config.js",
			"include": [],
			"exclude": [
				"typescript"
			],
			"contents": "import adapter from '@sveltejs/adapter-auto';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\tkit: {\n\t\t// adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.\n\t\t// If your environment is not supported or you settled on a specific environment, switch out the adapter.\n\t\t// See https://kit.svelte.dev/docs/adapters for more information about adapters.\n\t\tadapter: adapter()\n\t}\n};\n\nexport default config;\n"
		},
		{
			"name": "vite.config.ts",
			"include": [
				"typescript"
			],
			"exclude": [],
			"contents": "import { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vite';\n\nexport default defineConfig({\n\tplugins: [sveltekit()]\n});\n"
		},
		{
			"name": "vite.config.js",
			"include": [
				"checkjs"
			],
			"exclude": [],
			"contents": "import { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vite';\n\nexport default defineConfig({\n\tplugins: [sveltekit()]\n});\n"
		},
		{
			"name": "package.json",
			"include": [
				"default",
				"checkjs"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"@types/cookie\": \"^0.5.1\"\n\t}\n}\n"
		},
		{
			"name": "svelte.config.js",
			"include": [
				"default",
				"checkjs"
			],
			"exclude": [],
			"contents": "import adapter from '@sveltejs/adapter-auto';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\t// Consult https://kit.svelte.dev/docs/integrations#preprocessors\n\t// for more information about preprocessors\n\tpreprocess: vitePreprocess(),\n\n\tkit: {\n\t\t// adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.\n\t\t// If your environment is not supported or you settled on a specific environment, switch out the adapter.\n\t\t// See https://kit.svelte.dev/docs/adapters for more information about adapters.\n\t\tadapter: adapter()\n\t}\n};\n\nexport default config;\n"
		},
		{
			"name": "package.json",
			"include": [
				"default",
				"typescript"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"@types/cookie\": \"^0.5.1\"\n\t}\n}\n"
		},
		{
			"name": "svelte.config.js",
			"include": [
				"default",
				"typescript"
			],
			"exclude": [],
			"contents": "import adapter from '@sveltejs/adapter-auto';\nimport { vitePreprocess } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\t// Consult https://kit.svelte.dev/docs/integrations#preprocessors\n\t// for more information about preprocessors\n\tpreprocess: vitePreprocess(),\n\n\tkit: {\n\t\t// adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.\n\t\t// If your environment is not supported or you settled on a specific environment, switch out the adapter.\n\t\t// See https://kit.svelte.dev/docs/adapters for more information about adapters.\n\t\tadapter: adapter()\n\t}\n};\n\nexport default config;\n"
		},
		{
			"name": "svelte.config.js",
			"include": [
				"default"
			],
			"exclude": [
				"typescript"
			],
			"contents": "import adapter from '@sveltejs/adapter-auto';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\tkit: {\n\t\t// adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.\n\t\t// If your environment is not supported or you settled on a specific environment, switch out the adapter.\n\t\t// See https://kit.svelte.dev/docs/adapters for more information about adapters.\n\t\tadapter: adapter()\n\t}\n};\n\nexport default config;\n"
		},
		{
			"name": "package.json",
			"include": [
				"eslint",
				"prettier"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"eslint-config-prettier\": \"^8.5.0\"\n\t},\n\t\"scripts\": {\n\t\t\"lint\": \"prettier --plugin-search-dir . --check . && eslint .\",\n\t\t\"format\": \"prettier --plugin-search-dir . --write .\"\n\t}\n}\n"
		},
		{
			"name": ".eslintrc.cjs",
			"include": [
				"eslint",
				"typescript"
			],
			"exclude": [],
			"contents": "module.exports = {\n\troot: true,\n\textends: [\n\t\t'eslint:recommended',\n\t\t'plugin:@typescript-eslint/recommended',\n\t\t'plugin:svelte/recommended'\n\t],\n\tparser: '@typescript-eslint/parser',\n\tplugins: ['@typescript-eslint'],\n\tparserOptions: {\n\t\tsourceType: 'module',\n\t\tecmaVersion: 2020,\n\t\textraFileExtensions: ['.svelte']\n\t},\n\tenv: {\n\t\tbrowser: true,\n\t\tes2017: true,\n\t\tnode: true\n\t},\n\toverrides: [\n\t\t{\n\t\t\tfiles: ['*.svelte'],\n\t\t\tparser: 'svelte-eslint-parser',\n\t\t\tparserOptions: {\n\t\t\t\tparser: '@typescript-eslint/parser'\n\t\t\t}\n\t\t}\n\t]\n};\n"
		},
		{
			"name": "package.json",
			"include": [
				"eslint",
				"typescript"
			],
			"exclude": [],
			"contents": "{\n\t\"devDependencies\": {\n\t\t\"@typescript-eslint/eslint-plugin\": \"^5.45.0\",\n\t\t\"@typescript-eslint/parser\": \"^5.45.0\"\n\t}\n}\n"
		},
		{
			"name": "package.json",
			"include": [
				"eslint"
			],
			"exclude": [
				"prettier"
			],
			"contents": "{\n\t\"scripts\": {\n\t\t\"lint\": \"eslint .\"\n\t}\n}\n"
		},
		{
			"name": ".eslintrc.cjs",
			"include": [
				"eslint"
			],
			"exclude": [
				"typescript"
			],
			"contents": "module.exports = {\n\troot: true,\n\textends: ['eslint:recommended', 'plugin:svelte/recommended'],\n\tparserOptions: {\n\t\tsourceType: 'module',\n\t\tecmaVersion: 2020,\n\t\textraFileExtensions: ['.svelte']\n\t},\n\tenv: {\n\t\tbrowser: true,\n\t\tes2017: true,\n\t\tnode: true\n\t}\n};\n"
		},
		{
			"name": "playwright.config.ts",
			"include": [
				"playwright",
				"typescript"
			],
			"exclude": [],
			"contents": "import type { PlaywrightTestConfig } from '@playwright/test';\n\nconst config: PlaywrightTestConfig = {\n\twebServer: {\n\t\tcommand: 'npm run build && npm run preview',\n\t\tport: 4173\n\t},\n\ttestDir: 'tests',\n\ttestMatch: /(.+\\.)?(test|spec)\\.[jt]s/\n};\n\nexport default config;\n"
		},
		{
			"name": "playwright.config.js",
			"include": [
				"playwright"
			],
			"exclude": [
				"typescript"
			],
			"contents": "/** @type {import('@playwright/test').PlaywrightTestConfig} */\nconst config = {\n\twebServer: {\n\t\tcommand: 'npm run build && npm run preview',\n\t\tport: 4173\n\t},\n\ttestDir: 'tests',\n\ttestMatch: /(.+\\.)?(test|spec)\\.[jt]s/\n};\n\nexport default config;\n"
		},
		{
			"name": "jsconfig.json",
			"include": [
				"skeletonlib",
				"checkjs"
			],
			"exclude": [],
			"contents": "{\n\t\"extends\": \"./.svelte-kit/tsconfig.json\",\n\t\"compilerOptions\": {\n\t\t\"allowJs\": true,\n\t\t\"checkJs\": true,\n\t\t\"esModuleInterop\": true,\n\t\t\"forceConsistentCasingInFileNames\": true,\n\t\t\"resolveJsonModule\": true,\n\t\t\"skipLibCheck\": true,\n\t\t\"sourceMap\": true,\n\t\t\"strict\": true,\n\t\t\"moduleResolution\": \"NodeNext\"\n\t}\n}\n"
		},
		{
			"name": "tsconfig.json",
			"include": [
				"skeletonlib",
				"typescript"
			],
			"exclude": [],
			"contents": "{\n\t\"extends\": \"./.svelte-kit/tsconfig.json\",\n\t\"compilerOptions\": {\n\t\t\"allowJs\": true,\n\t\t\"checkJs\": true,\n\t\t\"esModuleInterop\": true,\n\t\t\"forceConsistentCasingInFileNames\": true,\n\t\t\"resolveJsonModule\": true,\n\t\t\"skipLibCheck\": true,\n\t\t\"sourceMap\": true,\n\t\t\"strict\": true,\n\t\t\"moduleResolution\": \"NodeNext\"\n\t}\n}\n"
		},
		{
			"name": "jsconfig.json",
			"include": [
				"skeletonlib"
			],
			"exclude": [
				"typescript"
			],
			"contents": "{\n\t\"extends\": \"./.svelte-kit/tsconfig.json\",\n\t\"compilerOptions\": {\n\t\t\"esModuleInterop\": true,\n\t\t\"forceConsistentCasingInFileNames\": true,\n\t\t\"resolveJsonModule\": true,\n\t\t\"skipLibCheck\": true,\n\t\t\"sourceMap\": true,\n\t\t\"moduleResolution\": \"NodeNext\"\n\t}\n}\n"
		},
		{
			"name": "vite.config.ts",
			"include": [
				"vitest",
				"typescript"
			],
			"exclude": [],
			"contents": "import { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vitest/config';\n\nexport default defineConfig({\n\tplugins: [sveltekit()],\n\ttest: {\n\t\tinclude: ['src/**/*.{test,spec}.{js,ts}']\n\t}\n});\n"
		},
		{
			"name": "vite.config.js",
			"include": [
				"vitest",
				"checkjs"
			],
			"exclude": [],
			"contents": "import { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vitest/config';\n\nexport default defineConfig({\n\tplugins: [sveltekit()],\n\ttest: {\n\t\tinclude: ['src/**/*.{test,spec}.{js,ts}']\n\t}\n});\n"
		},
		{
			"name": "package.json",
			"include": [
				"prettier"
			],
			"exclude": [
				"eslint"
			],
			"contents": "{\n\t\"scripts\": {\n\t\t\"lint\": \"prettier --plugin-search-dir . --check .\",\n\t\t\"format\": \"prettier --plugin-search-dir . --write .\"\n\t}\n}\n"
		},
		{
			"name": "vite.config.js",
			"include": [],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vite';\n\nexport default defineConfig({\n\tplugins: [sveltekit()]\n});\n"
		},
		{
			"name": "src/routes/sverdle/game.test.ts",
			"include": [
				"default",
				"vitest",
				"typescript"
			],
			"exclude": [],
			"contents": "import { describe, it, expect } from 'vitest';\nimport { Game } from './game';\n\ndescribe('game test', () => {\n\tit('returns true when a valid word is entered', () => {\n\t\tconst game = new Game();\n\t\texpect(game.enter('zorro'.split(''))).toBe(true);\n\t});\n});\n"
		},
		{
			"name": "src/routes/sverdle/game.test.js",
			"include": [
				"default",
				"vitest",
				"checkjs"
			],
			"exclude": [],
			"contents": "import { describe, it, expect } from 'vitest';\nimport { Game } from './game';\n\ndescribe('game test', () => {\n\tit('returns true when a valid word is entered', () => {\n\t\tconst game = new Game();\n\t\texpect(game.enter('zorro'.split(''))).toBe(true);\n\t});\n});\n"
		},
		{
			"name": ".eslintrc.cjs",
			"include": [
				"eslint",
				"prettier",
				"typescript"
			],
			"exclude": [],
			"contents": "module.exports = {\n\troot: true,\n\textends: [\n\t\t'eslint:recommended',\n\t\t'plugin:@typescript-eslint/recommended',\n\t\t'plugin:svelte/recommended',\n\t\t'prettier'\n\t],\n\tparser: '@typescript-eslint/parser',\n\tplugins: ['@typescript-eslint'],\n\tparserOptions: {\n\t\tsourceType: 'module',\n\t\tecmaVersion: 2020,\n\t\textraFileExtensions: ['.svelte']\n\t},\n\tenv: {\n\t\tbrowser: true,\n\t\tes2017: true,\n\t\tnode: true\n\t},\n\toverrides: [\n\t\t{\n\t\t\tfiles: ['*.svelte'],\n\t\t\tparser: 'svelte-eslint-parser',\n\t\t\tparserOptions: {\n\t\t\t\tparser: '@typescript-eslint/parser'\n\t\t\t}\n\t\t}\n\t]\n};\n"
		},
		{
			"name": ".eslintrc.cjs",
			"include": [
				"eslint",
				"prettier"
			],
			"exclude": [
				"typescript"
			],
			"contents": "module.exports = {\n\troot: true,\n\textends: ['eslint:recommended', 'plugin:svelte/recommended', 'prettier'],\n\tparserOptions: {\n\t\tsourceType: 'module',\n\t\tecmaVersion: 2020,\n\t\textraFileExtensions: ['.svelte']\n\t},\n\tenv: {\n\t\tbrowser: true,\n\t\tes2017: true,\n\t\tnode: true\n\t}\n};\n"
		},
		{
			"name": "tests/test.ts",
			"include": [
				"playwright",
				"default",
				"typescript"
			],
			"exclude": [],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('about page has expected h1', async ({ page }) => {\n\tawait page.goto('/about');\n\tawait expect(page.getByRole('heading', { name: 'About this app' })).toBeVisible();\n});\n"
		},
		{
			"name": "tests/test.js",
			"include": [
				"playwright",
				"default",
				"checkjs"
			],
			"exclude": [],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('about page has expected h1', async ({ page }) => {\n\tawait page.goto('/about');\n\tawait expect(page.getByRole('heading', { name: 'About this app' })).toBeVisible();\n});\n"
		},
		{
			"name": "tests/test.ts",
			"include": [
				"playwright",
				"skeleton",
				"typescript"
			],
			"exclude": [],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('index page has expected h1', async ({ page }) => {\n\tawait page.goto('/');\n\tawait expect(page.getByRole('heading', { name: 'Welcome to SvelteKit' })).toBeVisible();\n});\n"
		},
		{
			"name": "tests/test.js",
			"include": [
				"playwright",
				"skeleton",
				"checkjs"
			],
			"exclude": [],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('index page has expected h1', async ({ page }) => {\n\tawait page.goto('/');\n\tawait expect(page.getByRole('heading', { name: 'Welcome to SvelteKit' })).toBeVisible();\n});\n"
		},
		{
			"name": "tests/test.ts",
			"include": [
				"playwright",
				"skeletonlib",
				"typescript"
			],
			"exclude": [],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('index page has expected h1', async ({ page }) => {\n\tawait page.goto('/');\n\tawait expect(page.getByRole('heading', { name: 'Welcome to SvelteKit' })).toBeVisible();\n});\n"
		},
		{
			"name": "tests/test.js",
			"include": [
				"playwright",
				"skeletonlib",
				"checkjs"
			],
			"exclude": [],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('index page has expected h1', async ({ page }) => {\n\tawait page.goto('/');\n\tawait expect(page.getByRole('heading', { name: 'Welcome to SvelteKit' })).toBeVisible();\n});\n"
		},
		{
			"name": "vite.config.js",
			"include": [
				"vitest"
			],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vitest/config';\n\nexport default defineConfig({\n\tplugins: [sveltekit()],\n\ttest: {\n\t\tinclude: ['src/**/*.{test,spec}.{js,ts}']\n\t}\n});\n"
		},
		{
			"name": "src/index.test.ts",
			"include": [
				"vitest",
				"skeleton",
				"typescript"
			],
			"exclude": [],
			"contents": "import { describe, it, expect } from 'vitest';\n\ndescribe('sum test', () => {\n\tit('adds 1 + 2 to equal 3', () => {\n\t\texpect(1 + 2).toBe(3);\n\t});\n});\n"
		},
		{
			"name": "src/index.test.js",
			"include": [
				"vitest",
				"skeleton",
				"checkjs"
			],
			"exclude": [],
			"contents": "import { describe, it, expect } from 'vitest';\n\ndescribe('sum test', () => {\n\tit('adds 1 + 2 to equal 3', () => {\n\t\texpect(1 + 2).toBe(3);\n\t});\n});\n"
		},
		{
			"name": "src/index.test.ts",
			"include": [
				"vitest",
				"skeletonlib",
				"typescript"
			],
			"exclude": [],
			"contents": "import { describe, it, expect } from 'vitest';\n\ndescribe('sum test', () => {\n\tit('adds 1 + 2 to equal 3', () => {\n\t\texpect(1 + 2).toBe(3);\n\t});\n});\n"
		},
		{
			"name": "src/index.test.js",
			"include": [
				"vitest",
				"skeletonlib",
				"checkjs"
			],
			"exclude": [],
			"contents": "import { describe, it, expect } from 'vitest';\n\ndescribe('sum test', () => {\n\tit('adds 1 + 2 to equal 3', () => {\n\t\texpect(1 + 2).toBe(3);\n\t});\n});\n"
		},
		{
			"name": "src/routes/sverdle/game.test.js",
			"include": [
				"default",
				"vitest"
			],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { describe, it, expect } from 'vitest';\nimport { Game } from './game';\n\ndescribe('game test', () => {\n\tit('returns true when a valid word is entered', () => {\n\t\tconst game = new Game();\n\t\texpect(game.enter('zorro'.split(''))).toBe(true);\n\t});\n});\n"
		},
		{
			"name": "tests/test.js",
			"include": [
				"playwright",
				"default"
			],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('about page has expected h1', async ({ page }) => {\n\tawait page.goto('/about');\n\tawait expect(page.getByRole('heading', { name: 'About this app' })).toBeVisible();\n});\n"
		},
		{
			"name": "tests/test.js",
			"include": [
				"playwright",
				"skeleton"
			],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('index page has expected h1', async ({ page }) => {\n\tawait page.goto('/');\n\tawait expect(page.getByRole('heading', { name: 'Welcome to SvelteKit' })).toBeVisible();\n});\n"
		},
		{
			"name": "tests/test.js",
			"include": [
				"playwright",
				"skeletonlib"
			],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { expect, test } from '@playwright/test';\n\ntest('index page has expected h1', async ({ page }) => {\n\tawait page.goto('/');\n\tawait expect(page.getByRole('heading', { name: 'Welcome to SvelteKit' })).toBeVisible();\n});\n"
		},
		{
			"name": "src/index.test.js",
			"include": [
				"vitest",
				"skeleton"
			],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { describe, it, expect } from 'vitest';\n\ndescribe('sum test', () => {\n\tit('adds 1 + 2 to equal 3', () => {\n\t\texpect(1 + 2).toBe(3);\n\t});\n});\n"
		},
		{
			"name": "src/index.test.js",
			"include": [
				"vitest",
				"skeletonlib"
			],
			"exclude": [
				"typescript",
				"checkjs"
			],
			"contents": "import { describe, it, expect } from 'vitest';\n\ndescribe('sum test', () => {\n\tit('adds 1 + 2 to equal 3', () => {\n\t\texpect(1 + 2).toBe(3);\n\t});\n});\n"
		}
	]
}